# key binds

#========================================================================
$DISP = hyprctl dispatch

# 用于退出 submap 状态
$RESET_MAP = $DISP submap reset
#========================================================================
# 用于一些十分常用的快捷键
bind = $MAIN_MOD, Q, execr, $DISP killactive # <MAIN_MOD Q>

#=======================================================================#
## 进入 一级 submap WindowAction
# 先reset 再运行命令
bind = $MAIN_MOD, W, submap, WindowAction                               # <MAIN_MOD W ( )>
submap=WindowAction
#=======================================================================#
  bind =          , Q, execr, $DISP killactive          && $RESET_MAP   # <Q> : 关闭活动窗口
  bind =          , T, execr, $DISP togglefloating      && $RESET_MAP   # <T> : 窗口浮动切换
  bind =          , P, execr, $DISP pseudo              && $RESET_MAP   # <P> : 窗口伪平铺切换
  bind =          , F, execr, $DISP fullscreen 1        && $RESET_MAP   # <F> : 全屏窗口切换（保留间隙）
  bind = $MAIN_MOD, F, execr, $DISP fullscreen 0        && $RESET_MAP   # <F> : 全屏窗口切换（不保留间隙）
  bind =          , G, execr, $DISP fakefullscreen      && $RESET_MAP   # <G> : 伪全屏窗口切换
  bind = $MAIN_MOD, P, execr, $DISP pin active          && $RESET_MAP   # <MAIN_P> : pin active window| 仅支持浮动窗口
  bind =          , O, execr, $DISP toggleopaque        && $RESET_MAP   # <O> : 透明切换
  bind =          , L, execr, $RESET_MAP                && $LOCK_SCRIPT # <L> : 锁屏
  bind =          , E, execr, $MANUAL_SWITCH_WALLPAPER  && $RESET_MAP   # <E> : 切换壁纸
  bind =          , R, execr, hyprctl keyword monitor DSI-1,transform, 1  && $RESET_MAP   # <E> : 切换壁纸
  bind =          , Y, execr, hyprctl keyword monitor DSI-1,transform, 3  && $RESET_MAP   # <E> : 切换壁纸
  bind =          , I, execr, $LOCAL_BIN_DIR/guifetch   && $RESET_MAP   # <I> : guifetch
  bind = $MAIN_MOD, R, execr, $DISP exit                && $RESET_MAP   # <R> : Hyprland 重启
  bind = $MAIN_MOD, Q, execr, $WLOGOUT                  && $RESET_MAP   # <MAIN_Q> : wlogout
## 将窗口移动到指定工作区
  bind =          , 1, execr, $DISP movetoworkspace 1   && $RESET_MAP   # <1>
  bind =          , 2, execr, $DISP movetoworkspace 2   && $RESET_MAP   # <2>
  bind =          , 3, execr, $DISP movetoworkspace 3   && $RESET_MAP   # <3>
  bind =          , 4, execr, $DISP movetoworkspace 4   && $RESET_MAP   # <4>
  bind =          , 5, execr, $DISP movetoworkspace 5   && $RESET_MAP   # <5>
  bind =          , 6, execr, $DISP movetoworkspace 6   && $RESET_MAP   # <6>
  bind =          , 7, execr, $DISP movetoworkspace 7   && $RESET_MAP   # <7>
  bind =          , 8, execr, $DISP movetoworkspace 8   && $RESET_MAP   # <8>
## 更改当前屏幕存在的工作区的焦点
  bind = , J, workspace, m+1                                            # <J> : 下一个工作区
  bind = , K, workspace, m-1                                            # <K> : 上一个工作区
## Quit : 退出一级 submap
bind = , W,       submap, reset                                         # <W>
bind = , escape,  submap, reset                                         # <ESC>
#=======================================================================>> 进入二级 submap SwapWindow
  bind = , S, submap, SwapWindow                                  # <MAIN_MOD M S ( )>
  submap=SwapWindow
    bind = , H, movewindow, l                                           # <H>: Left
    bind = , L, movewindow, r                                           # <L>: Right
    bind = , K, movewindow, u                                           # <K>: Up
    bind = , J, movewindow, d                                           # <J>: Down
    bind = , N, swapnext,   next                                        # <N>: Next
    bind = , P, swapnext,   prev                                        # <P>: Prev
#=======================================================================#
## Quit : 退出二级 submap
  bind = , BackSpace, submap, WindowAction                              # <BackSpace> : 返回上级 windowaction submap
  bind = , S,         submap, reset                                     # <S> : 退出 submap
## Quit submap
bind = , escape, submap, reset                                    # <ESC> : 推出 submap
submap=reset
#=======================================================================#

#=======================================================================#
## 移动工作区焦点
bind = $MAIN_MOD, 1, workspace,  1                                      # <MAIN_MOD 1>
bind = $MAIN_MOD, 2, workspace,  2                                      # <MAIN_MOD 2>
bind = $MAIN_MOD, 3, workspace,  3                                      # <MAIN_MOD 3>
bind = $MAIN_MOD, 4, workspace,  4                                      # <MAIN_MOD 4>
bind = $MAIN_MOD, 5, workspace,  5                                      # <MAIN_MOD 5>
bind = $MAIN_MOD, 6, workspace,  6                                      # <MAIN_MOD 6>
bind = $MAIN_MOD, 7, workspace,  7                                      # <MAIN_MOD 7>
bind = $MAIN_MOD, 8, workspace,  8                                      # <MAIN_MOD 8>
#=======================================================================#

#=======================================================================#
## 亮度和声音控制, 一级 submap 进入 [此 submap 支持在锁屏界面使用]
bindl = $MAIN_MOD, E, submap, VolumeBright                              # <MAIN_MOD E ( )>
submap=VolumeBright
## 声音控制 (1)
  bindl  = , space, execr, $VOLUME_MUTE                                 # <space>: 静音
  bindle = , K,     execr, $VOLUME_UP                                   # <k>    : 音量 加
  bindle = , J,     execr, $VOLUME_DOWN                                 # <j>    : 音量 减
## 亮度控制 (1)
  bindle = , L, execr, $BRIGHTNESS_UP                                   # <l>    : 亮度 加
  bindle = , H, execr, $BRIGHTNESS_DOWN                                 # <h>    : 亮度 减
## 音乐控制
  bindl = $ALT_MOD, J,      execr, $NEXT_TRACK                          # <CTRL j>    : 下一首
  bindl = $ALT_MOD, space,  execr, $PLAY_PAUSE                          # <CTRL space>: 播放暂停仅支持 playerctl
  bindl = $ALT_MOD, K,      execr, $PREV_TRACK                          # <CTRL k>    : 上一首
## Quit : 一级 submap 退出
bindl = , E,      submap, reset                                         # <E>
bindl = , escape, submap, reset                                         # <ESC>
submap=reset
#=======================================================================#

#=======================================================================#
## 亮度控制 (2) 不在 submap 中
bindle = , XF86MonBrightnessUp,   execr, $BRIGHTNESS_UP                 # <XF86MonBrightnessUp>:  亮度键 加
bindle = , XF86MonBrightnessDown, execr, $BRIGHTNESS_DOWN               # <XF86MonBrightnessDown: 亮度键 减
## 声音控制 (2) 不在 submap 中
bindl  = , XF86AudioMute,        execr, $VOLUME_MUTE                    # <XF86AudioMute>       : 静音切换
bindle = , XF86AudioRaiseVolume, execr, $VOLUME_UP                      # <XF86AudioRaiseVolume>: 音量 加
bindle = , XF86AudioLowerVolume, execr, $VOLUME_DOWN                    # <XF86AudioLowerVolume>: 音量 减
#=======================================================================#

#=======================================================================#
## 窗口组管理 : 进入一级 submap
bind = $MAIN_MOD,  G, submap, WindowsGroup                              # <MAIN_MOD G ( )>
submap=WindowsGroup
  bind = , F,   togglegroup                                             # <F>:    抓取/释放
## 组窗口切换
  bind = , tab, changegroupactive, f                                    # <TAB>:  下一个
  bind = $SHIFT_MOD, tab, changegroupactive, b                          # <TAB>:  上一个
  bind = , 1, changegroupactive, 1                                      # <1>: 开始
  bind = , 2, changegroupactive, 2                                      # <2>
  bind = , 3, changegroupactive, 3                                      # <3>
  bind = , 4, changegroupactive, 4                                      # <4>
  bind = , 5, changegroupactive, 5                                      # <5>
  bind = , 6, changegroupactive, 6                                      # <6>
  bind = , 7, changegroupactive, 7                                      # <7>
  bind = , 8, changegroupactive, 8                                      # <8>
  bind = , 9, changegroupactive, 9                                      # <9>
  bind = , 0, changegroupactive, 0                                      # <0>: 结尾
## 两次floating 直接合并入组
  bind = , T,   togglefloating,                                         #
  bind = , T,   togglefloating,                                         # <T>:    合并窗口入组
  bind = , O,   execr, $DISP lockactivegroup lock                        # <O>:  组锁定
  bind = , U,   execr, $DISP lockactivegroup unlock                      # <U>:  组解锁
  bind = , I,   execr, $DISP lockactivegroup toggle                      # <I>:  切换锁定 (感知组锁定)
## 将移动焦点添加到这个submap方便切换窗口 MOVE focus
  bind = , H,   movefocus, l                                            # <H>: Right
  bind = , L,   movefocus, r                                            # <L>: Left
  bind = , K,   movefocus, u                                            # <K>: Up
  bind = , J,   movefocus, d                                            # <J>: Down
  bind = , P,   cyclenext, prev                                         # <J>: Prev
  bind = , N,   cyclenext,                                              # <N>: Next
## 退出一级 submap
bind = , G,     submap, reset                                           # <G>
bind = , escape,submap, reset                                           # <ESC>
submap=reset
# ======================================================================#

# ======================================================================#
## 更改窗口焦点
bind = $MAIN_MOD, H, movefocus, l                                       # <H>
bind = $MAIN_MOD, L, movefocus, r                                       # <L>
bind = $MAIN_MOD, K, movefocus, u                                       # <K>
bind = $MAIN_MOD, J, movefocus, d                                       # <J>
bind = $MAIN_MOD, P, cyclenext, prev                                    # <P>: Prev
bind = $MAIN_MOD, N, cyclenext,                                         # <N>: Next
# ======================================================================#

# ======================================================================#
## mouseEmpty Mapping
bindm = $MAIN_MOD, mouse:272, movewindow
bindm = $MAIN_MOD, mouse:273, resizewindow
# ======================================================================#

# ======================================================================#
## Scratchpad
bind = $MAIN_ALT_MOD, grave, movetoworkspace,  special                  # <SUPER+ALT+`> : 将当前窗口发送到特殊工作区
bind = $MAIN_MOD,     grave, togglespecialworkspace,                    # <MAIN+`>      : 显示和隐藏特殊工作区
## 将特殊工作区的窗口发送到当前存在的空白工作区并平铺
bind = $MAIN_ALT_MOD, w, movetoworkspace, empty                         # <MAIN+ALT+W>  : 将特殊工作区发送到空白的工作区
bind = $MAIN_ALT_MOD, w, togglefloating,  window                        # <MAIN+ALT+W>  : 切换平铺
# ======================================================================#

# ======================================================================#
## Resize window 调整当前窗口大小
bind = $MAIN_MOD, R, submap, resize                                     # <MAIN+R ( )>
submap=resize
  binde = , H,     execr, $DISP resizeactive -20  0                     # <H>
  binde = , J,     execr, $DISP resizeactive  0   20                    # <J>
  binde = , K,     execr, $DISP resizeactive  0  -20                    # <K>
  binde = , L,     execr, $DISP resizeactive  20  0                     # <L>
  binde = , Left,  execr, $DISP resizeactive -10  0                     # <Left>
  binde = , Down,  execr, $DISP resizeactive  0   10                    # <Down>
  binde = , Up,    execr, $DISP resizeactive  0  -10                    # <Up>
  binde = , Right, execr, $DISP resizeactive  10  0                     # <Right>
## Quit : 退出一级 submap
bind  = , R,      submap, reset                                         # <R>
bindt = , escape, submap, reset                                         # <ESC>
submap = reset
# $(bc <<< "$(hyprctl monitors -j | gojq '.[] | select(.focused == true) | .width ' -r) / 2") 0
# ======================================================================#

# ======================================================================#
# Apps
bind = $MAIN_MOD,  T,      execr,   kitty --start-as=fullscreen --title fullscreen_kitty  # ##  全屏
bind = $MAIN_MOD,  RETURN, execr,   kitty --title float_kitty                             # ##  浮动
bind = $ALT_MOD ,  RETURN, execr,   kitty --single-instance --title tile_kitty            # ##  平铺
bind = $CTRL_MOD,  1,      execr,   kitty --title kitty_cava       --hold cava
bind = $CTRL_MOD,  2,      execr,   kitty --title kitty_clock      --hold tty-clock -C5
bind = $CTRL_MOD,  3,      execr,   kitty --title kitty_alsamixer  --hold alsamixer
bind = $CTRL_MOD,  4,      execr,   thunar
bind = $MAIN_MOD,  space,  execr,   $ROFI_LAUNCHER
bind = $MAIN_MOD,  V,      execr,   cliphist list | rofi -dmenu -theme "$HOME/.config/rofi/launchers/type-2/style-1" | cliphist decode | wl-copy # ## clipboard store show whith wofi/rofi (在 wofi/rofi 中查看剪切板
#edge: /usr/bin/microsoft-edge-stable --password-store=gnome --enable-features=UseOzonePlatform --ozone-platform=wayland --gtk-version=4
# ======================================================================#

# ======================================================================#
# Screenshot 截图
bind = $MAIN_MOD, S, submap, Screenshot
submap=Screenshot
# bind = , 1,   exec,                             grim -g "$(slurp -d)" - | wl-copy  && notify-send "选区截图发送至剪切板"    # ## 选区截图发送至剪切板
# bind = , 2,   exec, [noanim]                    grim -g "$(slurp -d)" - | swappy -f - && notify-send "选区截图"            # ## 选区截图
# bind = , 3,   exec, [float;noanim;toggleopaque] grim -g "$(hyprctl activewindow -j | gojq '.at[0]-20, $a, .at[1]-20, $b, .size[0]+40, $c, .size[1]+40' -j --arg a ',' --arg b ' ' --arg c 'x')" - | wl-copy && sleep 1.0 && notify-send "截取当前活动窗口发送至剪切板"  # ## 截取当前活动窗口发送至剪切板     (Send a screenshot of the currently active window to the clipboard)
# bind = , 4,   exec, [float;noanim;toggleopaque] grim -o "$(hyprctl monitors -j | gojq '.[] | select(.focused == true) | .name' -r)" - | wl-copy && notify-send "截取当前显示器全屏并拷贝至剪切板"                                              # ## 截取当前显示器全屏并拷贝至剪切板 (take screenshot and send to clipboard)
# bind = , 5,   exec, [float;noanim;toggleopaque] grim -o "$(hyprctl monitors -j | gojq '.[] | select(.focused == true) | .name' -r)" - | imv -f - & grim -g "$(sleep 0.5 && slurp -d)" - | xargs -x swappy -f - & sleep 0.1 killall imv-wayland && notify-send "暂停截屏"           # ## 暂停屏幕（伪）截屏          (Pause screenshot)
bind = , 1, execr, $HYPR_SCRIPTS_DIR/screenshot 1 5 2 && $RESET_MAP # 选区截屏后编辑
bind = , 2, execr, $HYPR_SCRIPTS_DIR/screenshot 2 5 2 && $RESET_MAP # 全屏截图
bind = , 3, execr, $HYPR_SCRIPTS_DIR/screenshot 3 5 2 && $RESET_MAP # 活动窗口截图
bind = , 4, execr, $HYPR_SCRIPTS_DIR/screenshot 4 5 2 && $RESET_MAP # 选区截屏后发送剪切板
## 脚本待移动到hypr_scripts_dir 通知需要重构 配合eww 显示状态
  bind = , R,   exec, [float;noanim;toggleopaque] $LOCAL_BIN_DIR/record-script.sh & notify-send "wf-recorder 开始录制" && $REST
  bind = , Q,   execr, /usr/bin/kill --signal SIGINT wf-recorder & notify-send "wf-recorder 停止录制" && $REST
## 退出一级 submap
bind = , S,      submap, reset
#bind = , S,      execr,  pkill imv-wayland
bind = , escape, submap, reset
#bind = , escape, execr,  pkill imv-wayland
submap=reset
# hyprctl clients -j | gojq -r '.[] | select(.title != "") | "\(.class), \(.title), \(.workspace), \(.at), \(.size)"' | rofi -dmenu # ## 使用rofi进行模糊搜索截屏
# ======================================================================#

# ======================================================================#
## Lid Switch
# trigger when the switch is toggled
#bindl=,switch:Lid Switch,exec, notify-send "switch"
# ## 屏幕合上屏幕黑屏的同时进行省电但是不锁屏 现在起换到ags 等修改相关省电设置
#bindl=,switch:off:Lid Switch, execr,  # $HYPR_SCRIPTS_DIR/mode.sh open $HYPR_SCRIPTS_DIR/randwall.sh $WALLPAPER_DIR $HOME/.config/eww && iio-hyprland DSI-1
#bindl=,switch:on:Lid Switch,  execr,  # $HYPR_SCRIPTS_DIR/mode.sh close
# ======================================================================#

#bind = $MAIN_MOD, F1, exec,notify-send "Game-mode 启动！" && $HYPR_SCRIPTS_DIR/gamemode.sh   # ## 官方的游戏模式

# ======================================================================#
## ORC pot :'curl 127.0.0.1:port'
#  POST "/" => 翻译指定文本(body为需要翻译的文本),
#  GET "/config" => 打开设置,
#  GET "/translate" => 翻译指定文本(同"/"),
#  GET "/selection_translate" => 划词翻译,
#  GET "/input_translate" => 输入翻译,
#  GET "/ocr_recognize" => 截图OCR,
#  GET "/ocr_translate" => 截图翻译,
#  GET "/ocr_recognize?screenshot=false" => 截图OCR(不使用软件内截图),
#  GET "/ocr_translate?screenshot=false" => 截图翻译(不使用软件内截图),
#  GET "/ocr_recognize?screenshot=true" => 截图OCR,
#  GET "/ocr_translate?screenshot=true" => 截图翻译,
# ---
  bind = $ALT_MOD, X, execr, grim -g "$(slurp -d)" ~/.cache/com.pot-app.desktop/pot_screenshot_cut.png && curl "127.0.0.1:60828/ocr_recognize?screenshot=false"
  bind = $ALT_MOD, C, execr, grim -g "$(slurp -d)" ~/.cache/com.pot-app.desktop/pot_screenshot_cut.png && curl "127.0.0.1:60828/ocr_translate?screenshot=false"
  bind = $ALT_MOD, V, execr, notify-send "Pot 剪切板翻译" && curl "127.0.0.1:60828/$(wl-paste)"
  bind = $ALT_MOD, B, execr, notify-send "Pot 划词翻译" && curl "127.0.0.1:60828/selection_translate"
  bind = $ALT_MOD, Z, execr, notify-send "Pot 输入同步翻译" && curl "127.0.0.1:60828/input_translate"
# ======================================================================#
