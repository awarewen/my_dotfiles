# key binds
## PATH
$HYPR_CONF_DIR    = $HOME/.config/hypr                      # ## hyprland 配置所在目录
$HYPR_SCRIPTS_DIR = $HYPR_CONF_DIR/scripts                  # ## 辅助脚本所在目录
$ROFI_LAUNCHER    = $HOME/.config/rofi/scripts/launcher_t2  # ## rofi theme(themes: https://github.com/adi1090x/rofi)

## LOCK scripts
$LOCK_SCRIPT      = $HYPR_SCRIPTS_DIR/lock                  # ## 锁屏脚本

## MOD KEY
$MAIN_MOD  = SUPER
$ALT_MOD   = ALT
$CTRL_MOD  = CTRL
$SHIFT_MOD = SHIFT

$SUPER_CTRL_MOD  = $MAIN_MOD $CTRL_MOD
$SUPER_ALT_MOD   = $MAIN_MOD $ALT_MOD
$SUPER_SHIFT_MOD = $MAIN_MOD $SHIFT_MOD
# ===================================================================

## Global (全局
bind = $MAIN_MOD,       Q,  killactive,
bind = $SUPER_CTRL_MOD, M,  exit,
bind = $SUPER_CTRL_MOD, S,  togglefloating,
bind = $SUPER_CTRL_MOD, P,  pseudo, Empty Mapping

## 快速开启/关闭透明
bind = $MAIN_MOD,       O,  toggleopaque

## mouseEmpty Mapping
bindm = $MAIN_MOD, mouse:272,  movewindow
bindm = $MAIN_MOD, mouse:273,  resizewindow
# ===================================================================
                                           # windows group (窗口组
bind = $MAIN_MOD,  G,    togglegroup       # ##  抓取/释放
bind = $MAIN_MOD,  tab,  changegroupactive # ##  窗口切换
# ===================================================================
                                           # 更改窗口焦点
bind = $MAIN_MOD, a,  movefocus,  l
bind = $MAIN_MOD, d,  movefocus,  r
bind = $MAIN_MOD, w,  movefocus,  u
bind = $MAIN_MOD, s,  movefocus,  d
# ===================================================================

## workspace 相关
bind = $MAIN_MOD, 1,  workspace,  1
bind = $MAIN_MOD, 2,  workspace,  2
bind = $MAIN_MOD, 3,  workspace,  3
bind = $MAIN_MOD, 4,  workspace,  4
bind = $MAIN_MOD, 5,  workspace,  5
bind = $MAIN_MOD, 6,  workspace,  6
bind = $MAIN_MOD, 7,  workspace,  7
bind = $MAIN_MOD, 8,  workspace,  8

## 移动当前窗口到指定工作区
bind = $ALT_MOD,  1,  movetoworkspace,  1
bind = $ALT_MOD,  2,  movetoworkspace,  2
bind = $ALT_MOD,  3,  movetoworkspace,  3
bind = $ALT_MOD,  4,  movetoworkspace,  4
bind = $ALT_MOD,  5,  movetoworkspace,  5
bind = $ALT_MOD,  6,  movetoworkspace,  6
bind = $ALT_MOD,  7,  movetoworkspace,  7
bind = $ALT_MOD,  8,  movetoworkspace,  8

## 快速切换活动工作区
bind = $MAIN_MOD, k,  workspace,  e+1
bind = $MAIN_MOD, j,  workspace,  e-1

## Scratchpad
bind = $SUPER_ALT_MOD,  grave,  movetoworkspace,  special   # ## 将当前窗口发送到特殊工作区
bind = $MAIN_MOD,       grave,  togglespecialworkspace,     # ## 显示和隐藏特殊工作区
                                                            # ## 将特殊工作区的窗口发送到当前屏幕活动的工作区并平铺
bind = $SUPER_ALT_MOD,  w, movetoworkspace, m+1
bind = $SUPER_ALT_MOD,  w, togglefloating,  window
# ===================================================================

## Light (屏幕亮度更改(未添加通知)
binde = , code:232, exec, light -U 5
binde = , code:233, exec, light -A 5
# ===================================================================

## Audio (音量更改(未添加通知)
bindle = ,  code:122, exec, amixer set Master 1%-
bindle = ,  code:123, exec, amixer set Master 1%+
# ===================================================================

## Resize window (键盘模式调整当前窗口大小
## - will start a submap called "resize"
bind   = $ALT_MOD,  R,  submap, resize
submap = resize                           # ## sets repeatable binds for resizing the active window
binde  = ,  right,  resizeactive,  10  0
binde  = ,  left,   resizeactive, -10  0
binde  = ,  up,     resizeactive,  0  -10
binde  = ,  down,   resizeactive,  0   10
bind   = ,  escape, submap, reset         # ## use reset to go back to the global submap
submap = reset                            # ## will reset the submap, meaning end the current one and return to the global one
# keybinds further down will be global again...
# ===================================================================

## App
# kitty title setting
$CAVA=kitty_cava
$CLOCK=kitty_clock
$ALSAMIXER=kitty_alsamixer
$KITTY_FULLSCREEN=kitty_fullscreen
$FLOAT_KITTY=float_kitty
$TILE_KITTY=tile_kitty
# ___________________________________________________________________
bind = $MAIN_MOD,  t,      exec,   kitty --start-as=fullscreen --title $FULLSCREEN_KITTY # ##  全屏
bind = $MAIN_MOD,  RETURN, exec,   kitty --title $FLOAT_KITTY                            # ##  浮动
bind = $ALT_MOD ,  RETURN, exec,   kitty --single-instance --title tile_kitty            # ##  平铺
bind = $CTRL_MOD,  1,      exec,   kitty --title kitty_cava --hold cava
bind = $CTRL_MOD,  2,      exec,   kitty --title kitty_clock --hold tty-clock -C5
bind = $CTRL_MOD,  3,      exec,   kitty --title kitty_alsamixer  --hold alsamixer
bind = $CTRL_MOD,  4,      exec,   thunar
bind = $MAIN_MOD,  space,  exec,   $ROFI_LAUNCHER
bind = $MAIN_MOD,  V,      exec,   cliphist list | rofi -dmenu -theme "$HOME/.config/rofi/launchers/type-2/style-1" | cliphist decode | wl-copy # ## clipboard store show whith wofi/rofi (在 wofi/rofi 中查看剪切板
#bind =          ,  Print,  exec,   $SCREENSHOT_SCRIPT
bind = $MAIN_MOD,  I,      exec,   grim -g "$(slurp)" - | wl-copy
bind = $MAIN_MOD   $ALT_MOD,  I,   exec, grim -g "$(slurp)" - | swappy -f -
#bind = $MAIN_MOD   $ALT_MOD,  P,   exec, grim - | imv -f - & grim -g "$(slurp)" - | swappy -f -
bind = $MAIN_MOD,  L,      exec,   $LOCK_SCRIPT

# ===================================================================[不管用]
## Lid Switch
# trigger when the switch is toggled
#bindl=,switch:[Lid Switch],exec, hyprctl dispatch dpms off
## trigger when the switch is turning on
#bindl=,switch:on:[switch name],exec,hyprctl keyword monitor "eDP-1, 2560x1600, 0x0, 1"
## trigger when the switch is turning off
#bindl=,switch:off:[switch name],exec,hyprctl keyword monitor "eDP-1, disable"
# ===================================================================

bind = $MAIN_MOD, F1, exec,notify-send "Game-mode 启动！" && $HYPR_SCRIPTS_DIR/gamemode.sh   # ## 官方的游戏模式


## ORC pot :'curl 127.0.0.1:port'
#   POST "/" => 翻译指定文本(body为需要翻译的文本),
#   GET "/config" => 打开设置,
#   GET "/translate" => 翻译指定文本(同"/"),
#   GET "/selection_translate" => 划词翻译,
#   GET "/input_translate" => 输入翻译,
#   GET "/ocr_recognize" => 截图OCR,
#   GET "/ocr_translate" => 截图翻译,
#   GET "/ocr_recognize?screenshot=false" => 截图OCR(不使用软件内截图),
#   GET "/ocr_translate?screenshot=false" => 截图翻译(不使用软件内截图),
#   GET "/ocr_recognize?screenshot=true" => 截图OCR,
#   GET "/ocr_translate?screenshot=true" => 截图翻译,
# ---
#  bind = $ALT_MOD, X, exec, notify-send "Pot OCR 翻译" && grim -g "$(slurp)" ~/.cache/com.pot-app.pot-desktop/pot_screenshot_cut.png && curl "127.0.0.1:60828/ocr_recognize?screenshot=false"
#  bind = $ALT_MOD, C, exec, notify-send "Pot 截图翻译" && grim -g "$(slurp)" ~/.cache/com.pot-app.pot-desktop/pot_screenshot_cut.png && curl "127.0.0.1:60828/ocr_translate?screenshot=false"
#  bind = $ALT_MOD, V, exec, notify-send "Pot 剪切板翻译" && curl "127.0.0.1:60828/$(wl-paste)"
#  bind = $ALT_MOD, B, exec, notify-send "Pot 划词翻译" && curl "127.0.0.1:60828/selection_translate"
#  bind = $ALT_MOD, Z, exec, notify-send "Pot 输入同步翻译" && curl "127.0.0.1:60828/input_translate"
